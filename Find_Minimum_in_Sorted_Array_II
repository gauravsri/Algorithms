/*
 Find Minimum in Rotated Sorted Array II

 Follow up for "Find Minimum in Rotated Sorted Array":
 What if duplicates are allowed?


*/

public class Solution {
    public int findMin(int[] nums) {
    	if (nums == null || nums.length == 0) {
    		return 0;
    	}
 		return minimum(nums, 0, nums.length-1);       
    }

    int minimum(int[] nums, int l, int h) {
    	int m = (l+h)/2;

    	if (l == h) {
    		return nums[l];
    	} else if (h-l == 1) {
    		return Math.min(nums[l], nums[h]);
    	} else if (nums[l] < nums[h]) {
    		return nums[l];
    	} else if (nums[l] == nums[h]) {
    		return minimum(nums, l+1, h);
    	} else if (nums[l] <= nums[m]) {
    		return minimum(nums, m, h);
    	} else {
    		return minimum(nums, l, m);
    	}
    }
}