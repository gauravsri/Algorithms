/* 3 Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/


public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
 		Arrays.sort(nums);
 		HashSet<ArrayList<Integer>> set = new HashSet<ArrayList<Integer>>();
 		List<List<Integer>> arr = new ArrayList<List<Integer>>();
        int i = 0, j = 0, k = 0, sum = 0;
        
 		for (i = 0; i < nums.length; i++) {
 			j = i+1;
 			k = nums.length -1;

 			while (j < k) {
 				sum = nums[i] + nums[j] + nums[k];
 				if (sum == 0) {
 					ArrayList<Integer> temp = new ArrayList<Integer>();
 					temp.add(nums[i]);
 					temp.add(nums[j]);
 					temp.add(nums[k]);
 					if (!set.contains(temp)) {
 						set.add(temp);
 						arr.add(temp);
 					}
 					j++;
 					k--;
 				}
 				if (sum < 0) {
 					j++;
 				} else if (sum > 0) {
 				    k--;
 				}

 			}
 		}       
 		return arr;
    }
}