public class Solution {
    public List<List<Integer>> permute(int[] nums) {
 		    List<List<Integer>> result = new ArrayList<List<Integer>>();
 		    permuteNumbers(nums, 0 , result);
 		    return result;
    }

    public void permuteNumbers(int[] nums, int start, List<List<Integer>> result) {
    	if (start >= nums.length) {
    		result.add(toList(nums));
    	}
    	
    	for (int i = start; i <= nums.length -1; i++) {
    		swap(nums, start, i);
    		permuteNumbers(nums, start+1, result);
    		swap(nums, start, i);
    	}
    }
    
    List<Integer> toList(int[] array) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < array.length; i++) {
            list.add(array[i]);
        }
        return list;
    }
    
    void swap(int[] nums, int i, int j) {
    	int t = nums[i];
    	nums[i] = nums[j];
    	nums[j] = t;
    }
}