public class Solution {
    public List<List<Integer>> permute(int[] nums) {
 		    List<List<Integer>> result = new ArrayList<List<Integer>>();
 		    permuteNumbers(nums, 0 , result);
 		    return result;
    }

    public void permuteNumbers(int[] nums, int start, List<List<Integer>> result) {
    	if (start >= nums.length) {
    		result.add(toList(nums));
    	}
    	
    	for (int i = start; i <= nums.length -1; i++) {
    		swap(nums, start, i);
    		permuteNumbers(nums, start+1, result);
    		swap(nums, start, i);
    	}
    }
    
    List<Integer> toList(int[] array) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < array.length; i++) {
            list.add(array[i]);
        }
        return list;
    }
    
    void swap(int[] nums, int i, int j) {
    	int t = nums[i];
    	nums[i] = nums[j];
    	nums[j] = t;
    }
}


//Solution II

public class Solution {
    public List<List<Integer>> permute(int[] nums) {
            List<List<Integer>> result = new ArrayList<List<Integer>>();
            Arrays.sort(nums);
            do {
                List<Integer> list = new ArrayList<Integer>();
                for (int i = 0; i < nums.length; i++) {
                    list.add(nums[i]);
                }
                result.add(list);
            } while(nextPermutation(nums));

            return result;
    }

    boolean nextPermutation(int[] nums) {
        int n = nums.length;
        int desc = 0;
        for (int i = n - 1; i> 0; i--) {
            if (nums[i] > nums[i-1]) {
                desc = i;
                break;
            }
        }

        if (desc == 0)
            return false;

        for (int i = n -1; i >=desc ; i--) {
            if (nums[i] > nums[desc - 1]) {
                swap(nums, i , desc -1);
                break;
            }
        }
        reverse(nums, desc, n-1);
        return true;    
    }

    void swap(int[] nums, int i, int j) {
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = i;
    }

    void reverse(int[] nums, int i, int j) {
        for ( ;i < j; i++, j--) {
            swap(nums, i , j);
        }
    }
}